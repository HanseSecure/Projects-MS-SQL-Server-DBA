USE [master]
 
DECLARE @Login varchar(255)='login'
DECLARE @Default_DB varchar(255)'master'  --DB by default
DECLARE @SQL nvarchar(max)n'  --sql container 
DECLARE @processadmin tinyintq1  --give processadmin rights on server
DECLARE @IS_VIEW_ANY_DEFINITION tinyintq1  --view any definition of objects within the server
DECLARE @IS_ALTER_ANY_DEFINITION tinyint0  --changes to any definition of objects within the ALTER DDL server within the server
DECLARE @All_User_DBs tinyintq1  --for all custom databases
 
DECLARE @ListDatabases TABLE([DB] varchar(255))
DECLARE @ListDBRoles TABLE([Role] varchar(255))
 
--List of roles
insert into @ListDBRoles
select distinct [name]
from
(select distinct [name]
from sys. database_principals where [type_desc]='DATABASE_ROLE'
and name in('db_datareader')roles  --a list of roles that are needed
 
--Filling out the list of necessary databases
INSERT INTO @ListDatabases
select [name]
from sys. databases where database_id>4 and name not in('SRV','Admin')
and (name in( ') or @All_User_DBsq1)  --Here via comma to give a list of database
 
SET @SQL='CREATE LOGIN ['+@Login+'] FROM WINDOWS WITH DEFAULT_DATABASE=['+@Default_DB+']'
 
begin try
    print @SQL
    exec sp_executesql @SQL
end try
begin catch
    if @@error<>0
    select  'login'@Login'alreadyexists on the server!' msg
end catch
 
--Cleaning up the conteiner's sql
set @SQL=''
 
if @processadmin=1
set @SQL='ALTER SERVER ROLE [processadmin] ADD MEMBER ['+@Login+']'
 
begin try
    print @SQL
    exec sp_executesql @SQL
end try
begin catch
    select ERROR_MESSAGE() err_msg, @SQL
end catch
 
set @SQL=''
 
--Create a user for the default database
set @SQL='USE ['+@Default_DB+']
CREATE USER ['+@Login+'] FOR LOGIN ['+@Login+']'
 
begin try
    print @SQL
    exec sp_executesql @SQL
end try
begin catch
    select ERROR_MESSAGE() err_msg, @SQL script
end catch
 
set @SQL=''
 
IF @IS_VIEW_ANY_DEFINITION=1
set @SQL='GRANT VIEW ANY DEFINITION TO ['+@Login+']'
 
begin try
    print @SQL
    exec sp_executesql @SQL
end try
begin catch
    select ERROR_MESSAGE() err_msg, @SQL script
end catch
 
set @SQL=''
 
--DDL admin в рамках сервера
IF @IS_ALTER_ANY_DEFINITION=1
set @SQL='GRANT ALTER ANY DEFINITION TO ['+@Login+']'
 
begin try
    print @SQL
    exec sp_executesql @SQL
end try
begin catch
    select ERROR_MESSAGE() err_msg, @SQL script
end catch
 
set @SQL=''
set @SQL=''
 
IF (select count(1) from @ListDatabases)>0
begin
begin
    select @SQL=@SQL+'
USE ['+DB+']
begin try CREATE USER ['+@Login+'] FOR LOGIN ['+@Login+'] end try
    begin catch end catch'
    from @ListDatabases
end
 
begin try
    print @SQL
    exec sp_executesql @SQL
end try
begin catch
    select ERROR_MESSAGE() err_msg, @SQL script
end catch
 
set @SQL=''
 
select @SQL=@SQL+'
USE ['+DB+']
begin try ALTER ROLE ['+R. Role+'] ADD MEMBER ['+@Login+'] end try
begin catch end catch'
from @ListDatabases DBS INNER JOIN @ListDBRoles R ON(1=1)
 
begin try
    print @SQL
    exec sp_executesql @SQL
end try
begin catch
    select ERROR_MESSAGE() err_msg, @SQL script
end catch
end
